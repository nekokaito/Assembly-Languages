EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
HelloWorld.exe -- emu8086 assembler version: 4.08  
 
[ 26/11/2024  --  6:56:38 pm ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model small
[   2]        :                                       .stack
[   3]        :                                       .data
[   4]        :                                       
[   5]    0100: 48 65 6C 6C 6F 20 57 6F 72 6C 64 20   a db 'Hello World $'
                24                                  
[   6]        :                                       
[   7]        :                                       .code
[   8]        :                                       
[   9]    0110:                                       main proc
[  10]    0110: B8 10 00                              mov ax, @data
[  11]    0113: 8E D8                                 mov ds, ax
[  12]        :                                       
[  13]    0115: B4 09                                 mov ah, 9 ; string output
[  14]    0117: BA 00 00                              lea dx, a
[  15]    011A: CD 21                                 int 21h
[  16]        :                                       
[  17]    011C: B4 4C                                 mov ah,4ch
[  18]    011E: CD 21                                 int 21h
[  19]        :                                       main endp
[  20]        :                                       
[  21]        :                                       end main
[  22]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 20      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: D3      -   check sum (l.byte)
0013: EC      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 11      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 11      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
